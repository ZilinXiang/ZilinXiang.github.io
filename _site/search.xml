<?xml version="1.0" encoding="utf-8"?>
<search>
  
    <entry>
      <title><![CDATA[Python的函数参数传递问题]]></title>
      <url>/note/2019/11/10/Python%E7%9A%84%E5%87%BD%E6%95%B0%E5%8F%82%E6%95%B0%E4%BC%A0%E9%80%92%E9%97%AE%E9%A2%98/</url>
      <content type="text"><![CDATA[  Python是解释执行的脚本语言，所以他与C语言等都不是一个体系， 存在诸多不一样的地方。Python 我认为与 C/C++ 最不一样的地方就是：没有变量类型。 而这个特点恰恰会带来一个很严重的问题，就是针对函数参数的传递。习惯了C/C++， 对于传参简直就是张口就来： 传值、传地址、引用。但是Python函数参数的传递和这些都不一样，因为Python的变量都是和对象进行绑定的，为此只要对象发生改变，变量的值就不会被函数改变。请看下面的例子，def f(a):	a = a + 1b = 2f(b)print(b)###  &gt;  2 （因为运算导致新对象的创建，导致a不再和b绑定同一个对象，为此b的值不变）def f(a):	a[0] += 1b = [1, 2]f(b)print(b)### &gt; [2, 2] (因为与b绑定的是一个list对象，list对象是可变对象，函数并未导致a, b绑定不同的对象，为此b的值发生改变)def f(a):	a = [1, 2]	a[0] += 1b = [1, 2]f(b)print(b)### &gt; [1, 2] (因为a与一个新的对象进行绑定，函数导致a, b绑定不同的对象，为此b的值不发生改变)]]></content>
      <categories>
        
          <category> note </category>
        
      </categories>
      <tags>
        
          <tag> Python </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[服务器配置]]></title>
      <url>/tutorial/2019/11/10/%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%85%8D%E7%BD%AE/</url>
      <content type="text"><![CDATA[  前段时间实验室添置了两台服务器，但是我们从来没接触过，所以完全是硬着头皮在搞，算是踩坑实践。用户及用户组管理  新建用户 （这里有个坑）          adduser: 会以交互的方式进行创建用户，自动创建主目录等，适合新手      useradd: 拥有诸多参数选项（若不指定任何参数，所创建的用户没有主目录、shell，因为未指定密码也无法登录系统），适合进阶者使用      利用shell脚本进行批次新建:  useradd guest001 -m -p 123456 -r -s \bin\bash -g cola （指定密码123456，用户组cola，指定shell）        删除用户： userdel guest001  新建用户组：addgroup cola  删除用户组：groupdel  修改用户、用户组信息：usermod \ groupmod（指定具体参数进行修改）  显示用户、用户组信息： cat /etc/passwd \ cat /etc/group  添加用户到sudo组：usermod -G sudo guest001 （指定附加群组）SSH远程登录  在服务器安装ssh: sudo apt install openssh-server  SSH配置： 修改配置文件/etc/ssh/sshd_config （修改端口，登录限制等等）  开启SSH服务： sudo /etc/init.d/ssh start网络配置  可配置类型：动态IP， 静态IP          配置文件位于/etc/network/interfaces      动态IP（DHCP），当所分配的固定IP与设备MAC地址绑定时也需使用动态IP,         auto eno1 #eno1为网卡 iface eno1 inet dhcp                    静态IP（一般为局域网IP，也可设置公网IP），必须设置网关         auto eno1iface eno1 inet staticaddress 192.168.3.90gateway 192.168.3.1netmask 255.255.255.0                    配置结束后，需重启网络服务： sudo /etc/init.d/networking restart        当服务器所分配的固定IP与MAC地址绑定时，最好是通过网口直连；若服务器与路由器相连，路由器在中间作为代理，IP提供者便无法检测到对应MAC地址，为此需将服务器MAC地址克隆到路由器，并建立虚拟服务器（使得外网对该IP的访问会映射到服务器）]]></content>
      <categories>
        
          <category> tutorial </category>
        
      </categories>
      <tags>
        
          <tag> Server </tag>
        
          <tag> Linux </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
</search>
